- id: 41873994-a8c2-4379-a93b-3e2c9b358733
  # under map_id is a list of fields that we need to address if we come accorss anything 
  # generated by that pattern  
  # map_fields: 
  # # In parsing this file, we need to end up with a table of patterns 
  # # pointing to a list of fields, each with a transformation attached.  
  patterns: 
  - d910eda9-62a0-4209-afef-afd37e38ad58
  - 19187f7a-e575-4729-a307-f7e050205bc6
  - 11d83e62-4b21-4dd5-bc67-d56eab522686
  field: date
  regex: '^(?P<mon>\w+)  (?P<day>\d+) (?P<time>\d+:\d+:\d+)'
  # will need to be run first
  conversions:
  - mon:
      substitute:
        Jan: 1
        Feb: 2
        Mar: 3
        Apr: 4
        May: 5
        Jun: 6
        Jul: 7
        Aug: 8
        Sep: 9
        Oct: 10
        Nov: 11
        Dec: 12
      #  Store the output as
  - day: 
      reformat: int
  update:
    pattern: '%{1}/%{2} @ %{3}'
- id: d910eda9-62a0-4209-afef-afd37e38ad58
  # map_fields:
  patterns: [11d83e62-4b21-4dd5-bc67-d56eab522686]
  # No regex is needed because the label has a single value of 'level'
  field: level
  conversions:
  - level:
      evaluate:
        - range: [0, 5]
          map: low
        - range: [6, 9]
          map: serious
        - range: [10, 14]
          map: critical