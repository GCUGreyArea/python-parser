# Nominally the ID field is provided to create an audit trail. In a production
# system this would be logged as the matching entity so that a path could be
# found back to the origional imput to the system 
- id: 41873994-a8c2-4379-a93b-3e2c9b358733
  patterns: 
  - d910eda9-62a0-4209-afef-afd37e38ad58
  - 19187f7a-e575-4729-a307-f7e050205bc6
  - 11d83e62-4b21-4dd5-bc67-d56eab522686
  field: date
  regex: '^(?P<mon>\w+)  (?P<day>\d+) (?P<time>\d+:\d+:\d+)'
  # will need to be run first
  conversions:
  - mon:
      # Tell the transformation engine to substitute 
      # words for numbers
      substitute:
        Jan: 1
        Feb: 2
        Mar: 3
        Apr: 4
        May: 5
        Jun: 6
        Jul: 7
        Aug: 8
        Sep: 9
        Oct: 10
        Nov: 11
        Dec: 12
  - day: 
      # Tell the transformation engine to reformat the string it findes at 'day'
      # to an 'int' This is actually meaninglessa nd here for demo more than
      # anything else as trhis will be converted back to a string. 
      reformat: int
  # The update function optionally provides some way to reformat the output from
  # the previous stage into a new string. 
  update:
    # The pattern provided for reformating. 
    pattern: '$1/$2 @ $3'
- id: d910eda9-62a0-4209-afef-afd37e38ad58
  # map_fields:
  patterns: [11d83e62-4b21-4dd5-bc67-d56eab522686]
  # No regex is needed because the label has a single value of 'level'
  field: level
  conversions:
  - level:
      # Evaluate the numeric range and supply a string literal that denominates
      # the value 
      evaluate:
        - range: [0, 5]
          map: low
        - range: [6, 9]
          map: serious
        - range: [10, 14]
          map: critical
